#include <stdio.h>
#include <stdlib.h>
 
struct TreeNode {
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
};
 
struct TreeNode* createNode(int value) {
    struct TreeNode* newNode = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    newNode->data = value;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
 
int treeDepth(struct TreeNode* root) {
    if (root == NULL) {
        return 0;
    } else {
        int leftDepth = treeDepth(root->left);
        int rightDepth = treeDepth(root->right);
 
        return (leftDepth > rightDepth) ? (leftDepth + 1) : (rightDepth + 1);
    }
}
 
int main() {
    //struct TreeNode* root = createNode(1);
    //root->left = createNode(2);
    //root->right = createNode(3);
    //root->left->left = createNode(4);
    //root->left->right = createNode(5);
 
    // Other type of tree 
    struct TreeNode* root = createNode(5);
    root->left = createNode(10);
    root->right = createNode(35);
    root->left->left = createNode(45);
    root->left->right = createNode(55);
 
    free(root->left->left);
    free(root->left->right);
    free(root->left);
    free(root->right);
    free(root);
 
    int depth = treeDepth(root);
    printf("Depth of the binary tree: %d\n", depth);
    return 0;
}
